import React, { useState } from "react";

const ConnectPage = ({ onClose, onSuccess }) => {
  const [formData, setFormData] = useState({
    platform: "Facebook",
    connectMethod: "oauth",
    pageName: "",
    pageId: "",
    accessToken: "",
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  const handleOAuthConnect = () => {
    // T·∫°o URL backend theo n·ªÅn t·∫£ng
    const lowerPlatform = formData.platform.toLowerCase();
    const oauthUrl = `http://localhost:3007/api/v1/${lowerPlatform}`;

    const popup = window.open(oauthUrl, "_blank", "width=800,height=700");

    // L·∫Øng nghe message t·ª´ backend
    const listener = (event) => {
      if (event.origin !== "http://localhost:3007") return;
      if (event.data?.type === `${lowerPlatform}_success`) {
        const { pageName, pageId, accessToken } = event.data;
        setFormData((prev) => ({
          ...prev,
          pageName,
          pageId,
          accessToken,
        }));
        popup?.close();
        window.removeEventListener("message", listener);
        onSuccess();
        onClose();
      }
    };

    window.addEventListener("message", listener);
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log("ConnectPage.jsx: G·ª≠i d·ªØ li·ªáu page ƒë·∫øn API:", formData);
    onSuccess();
    onClose();
  };

  // T·∫°o t√™n n·ªÅn t·∫£ng hi·ªÉn th·ªã th√¢n thi·ªán
  const platformLabel = {
    Facebook: "Facebook",
    Instagram: "Instagram",
    YouTube: "YouTube",
    TikTok: "TikTok",
    X: "Twitter",
  }[formData.platform];

  return (
    <div className="fixed inset-0 bg-black/40 flex items-center justify-center z-50">
      {" "}
      <div className="bg-white rounded-2xl shadow-xl w-full max-w-lg p-6">
        {/* Header */}{" "}
        <div className="flex justify-between items-center mb-6">
          {" "}
          <h2 className="text-2xl font-bold">K·∫øt n·ªëi Page m·ªõi</h2>{" "}
          <button
            onClick={onClose}
            className="text-gray-500 hover:text-gray-700 text-2xl"
          >
            √ó{" "}
          </button>{" "}
        </div>
        {/* Form */}
        <form onSubmit={handleSubmit} className="space-y-5">
          {/* N·ªÅn t·∫£ng */}
          <div>
            <label className="block text-sm font-medium mb-1">
              Ch·ªçn n·ªÅn t·∫£ng
            </label>
            <select
              name="platform"
              value={formData.platform}
              onChange={handleChange}
              className="w-full border rounded-lg p-2 focus:ring focus:ring-blue-200"
            >
              <option value="Facebook">Facebook</option>
              <option value="Instagram">Instagram</option>
              <option value="YouTube">YouTube</option>
              <option value="TikTok">TikTok</option>
              <option value="X">X (Twitter)</option>
            </select>
          </div>

          {/* Ph∆∞∆°ng th·ª©c k·∫øt n·ªëi */}
          <div>
            <label className="block text-sm font-medium mb-2">
              Ph∆∞∆°ng th·ª©c k·∫øt n·ªëi
            </label>
            <div className="flex flex-col gap-2">
              <label className="flex items-center gap-2">
                <input
                  type="radio"
                  name="connectMethod"
                  value="oauth"
                  checked={formData.connectMethod === "oauth"}
                  onChange={handleChange}
                  className="accent-blue-600"
                />
                <span>OAuth (Khuy·∫øn d√πng)</span>
              </label>
              <label className="flex items-center gap-2">
                <input
                  type="radio"
                  name="connectMethod"
                  value="manual"
                  checked={formData.connectMethod === "manual"}
                  onChange={handleChange}
                  className="accent-blue-600"
                />
                <span>Nh·∫≠p th·ªß c√¥ng</span>
              </label>
            </div>
          </div>

          {/* Hi·ªÉn th·ªã ph·∫ßn OAuth ƒë·ªông */}
          {formData.connectMethod === "oauth" && (
            <div className="bg-blue-50 border border-blue-100 rounded-lg p-4">
              <h3 className="font-semibold mb-2">K·∫øt n·ªëi OAuth</h3>
              <p className="text-sm text-gray-600 mb-3">
                Click n√∫t b√™n d∆∞·ªõi ƒë·ªÉ k·∫øt n·ªëi {platformLabel} c·ªßa b·∫°n m·ªôt c√°ch
                an to√†n.
              </p>
              <button
                type="button"
                onClick={handleOAuthConnect}
                className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 cursor-pointer"
              >
                üîó K·∫øt n·ªëi v·ªõi {platformLabel}
              </button>
            </div>
          )}

          {/* Nh·∫≠p th·ªß c√¥ng */}
          {formData.connectMethod === "manual" && (
            <>
              <div>
                <label className="block text-sm font-medium mb-1">
                  T√™n Page/Channel
                </label>
                <input
                  type="text"
                  name="pageName"
                  value={formData.pageName}
                  onChange={handleChange}
                  className="w-full border rounded-lg p-2 focus:ring focus:ring-blue-200"
                  placeholder="Nh·∫≠p t√™n page..."
                />
              </div>
              <div>
                <label className="block text-sm font-medium mb-1">
                  Page ID
                </label>
                <input
                  type="text"
                  name="pageId"
                  value={formData.pageId}
                  onChange={handleChange}
                  className="w-full border rounded-lg p-2 focus:ring focus:ring-blue-200"
                  placeholder="Nh·∫≠p Page ID..."
                />
              </div>
              <div>
                <label className="block text-sm font-medium mb-1">
                  Access Token
                </label>
                <textarea
                  name="accessToken"
                  value={formData.accessToken}
                  onChange={handleChange}
                  className="w-full border rounded-lg p-2 h-24 focus:ring focus:ring-blue-200 resize-none"
                  placeholder="Nh·∫≠p access token..."
                />
              </div>
            </>
          )}

          {/* Buttons */}
          <div className="flex justify-end gap-3 pt-4">
            <button
              type="button"
              onClick={onClose}
              className="px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300"
            >
              H·ªßy
            </button>
            <button
              type="submit"
              className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
            >
              üíæ K·∫øt n·ªëi Page
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default ConnectPage;
